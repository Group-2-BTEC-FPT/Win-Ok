#pragma checksum "D:\Co loan\WebApplication\WebApplication.Web\Views\Topic\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47787e611a9d2fbc7cd61f908c7d610cae711fe1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Topic_Index), @"mvc.1.0.view", @"/Views/Topic/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Co loan\WebApplication\WebApplication.Web\Views\_ViewImports.cshtml"
using WebApplication.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Co loan\WebApplication\WebApplication.Web\Views\_ViewImports.cshtml"
using WebApplication.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47787e611a9d2fbc7cd61f908c7d610cae711fe1", @"/Views/Topic/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55dcb12be480a17ed0836b14daa9689fbfa158f6", @"/Views/_ViewImports.cshtml")]
    public class Views_Topic_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\Co loan\WebApplication\WebApplication.Web\Views\Topic\Index.cshtml"
  
    ViewData["Title"] = "Topics";
    Layout = "~/Views/Shared/_Layout_admin.cshtml";
    ViewData["head-title"] = "Topic Control";

#line default
#line hidden
#nullable disable
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        let html = """";
        $.ajax({
            url: ""https://localhost:5001/api/Topics"",
            type: ""GET"",
            success: datas => {
                for (var data of datas.items) {
                    const updateTime = data.updateTime == null ? ""No Time Update"" : moment(data.updateTime).format(""DD/MM/YYY"")
                    html += `<tr>
                                     <th scope=""row"">`+ data.name + `</th>
                                     <td>`+ data.description + `</td>
                                     <td>`+ moment(data.createTime).format(""DD/MM/YYY"") + `</td>
                                     <td>`+ updateTime + `</td>
                                     <td><img class='image-topic' src=https://localhost:5001/store-image/`+ data.image + ` /></td>
                                     <td class='action-center' scope=""col"">
                                          <a class=""btn btn-success"">Update</a>
                                       ");
                WriteLiteral(@"    <a class=""btn btn-danger"">Delete</a>
                                      </td>
                                     </tr>`;
                }
                $(""#body-topic"").html(html);
                $(""#tabletopic"").show();
                $(""#spinLoaded"").hide();
            }
        })
    </script>
");
            }
            );
            WriteLiteral(@"<h2>Create</h2>
<div class=""justify-content-center"" style=""display:flex"" id=""spinLoaded"">
    <div class=""spinner-border text-success "" role=""status"">
        <span class=""sr-only"">Loading...</span>
    </div>
</div>
<table id=""tabletopic"" style=""display:none"" class=""table table-striped table-hover"">
    <thead style="" background: rebeccapurple;"" >
        <tr>
            <th scope=""col"">Topic Name</th>
            <th scope=""col"">Topic Description</th>
            <th scope=""col"">Create Time</th>
            <th scope=""col"">Update Time</th>
            <th scope=""col"">Topic Image</th>
            <th scope=""col"" class=""text-center"">Action</th>
        </tr>
    </thead>
    <tbody id=""body-topic"">
    </tbody>
</table>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
